{"version":3,"file":"js/app.6d7cf47d.js","mappings":"0SAaA,MAAMA,EAAO,EACPC,EAAQ,EAURC,GAAc,QAAI,IAClBC,GAAW,QAAS,CACtB,GAAAC,GACI,OAAOH,EAAME,QACjB,EACA,GAAAE,CAAIC,GACAN,EAAK,kBAAkBM,EAC3B,IAEEC,GAAe,QAAS,CAC1B,GAAAH,GACI,OAAOH,EAAMO,KAAKC,QAAOC,GAAQA,EAAKC,WAAWC,cAAcC,SAASX,EAAYI,MAAMM,gBAC9F,I,ifC9BJ,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,qJCIA,MAAMb,EAAQ,EAKRD,EAAO,EAEb,SAASe,EAAiBC,GACtB,GAAGf,EAAMgB,QAAQ,CACb,IAAIC,EAAQjB,EAAMkB,SAASC,QAAQnB,EAAMgB,SACzCC,GAASF,EACNE,GAAS,GAAKA,EAAQjB,EAAMkB,SAASE,SACpCJ,EAAQX,MAAQL,EAAMkB,SAASD,GAEvC,CACJ,CACA,MAAMD,GAAU,QAAS,CACrB,GAAAb,GACI,OAAOH,EAAMgB,OACjB,EACA,GAAAZ,CAAIC,GACAN,EAAK,iBAAiBM,EAC1B,I,+RC5BJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,mYCJA,MAAML,EAAQ,EAKRD,EAAO,EAGPG,GAAW,QAAS,CACtB,GAAAC,GACI,OAAOH,EAAME,QACjB,EACA,GAAAE,CAAIC,GACA,MAAMgB,EAAW,IAAInB,EAASG,MAAOA,GACrCN,EAAK,kBAAmBsB,EAC5B,IAGEC,GAAc,QAAI,mBAElBC,GAAS,QAAS,CACpB,GAAApB,GACI,OAAOmB,EAAYjB,KACvB,EACA,GAAAD,CAAIC,GACA,MAAMgB,EAAW,IAAInB,EAASG,MAAOA,GACrCN,EAAK,kBAAmBsB,GACxBG,QAAQC,IAAI,mBAEZH,EAAYjB,MAAQ,iBACxB,IAGEqB,GAAgB,SAAS,IACpB1B,EAAM2B,MAAMnB,QAAOC,IAAST,EAAME,SAASU,SAASH,OAK/D,SAASmB,EAAWnB,GAChB,MAAMoB,EAAmB3B,EAASG,MAAMG,QAAOsB,GAAgBA,IAAiBrB,IAChFV,EAAK,kBAAkB8B,EAC3B,CACA,SAASE,IACH7B,EAASG,MAAMe,OAAS,EACtBrB,EAAK,kBAAkB,IAEvBA,EAAK,kBAAkBC,EAAM2B,MAErC,C,uiBC/CA,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,yHCDA,MAAM3B,EAAQ,E,iHCDd,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,s5MCPO,SAASgC,EAAOC,GACnB,MAAO,WAAWA,EAAOC,2BAA2BD,EAAOE,KAE/D,CAcO,SAASC,EAAYH,GACxB,OAAO,IAAII,SAAQ,CAACC,EAASC,KACzBC,EAAeP,GACVQ,MAAKC,IACFJ,EAAQI,EAAK,IAEhBC,OAAMC,IACHL,EAAOK,EAAI,GACb,GAEd,CAIOC,eAAeC,EAAmBb,EAAOc,GAC5C,OAAO,IAAIV,SAAQ,CAACC,EAASC,KACzB,IAAIS,EAAc,GAElB,SAASC,EAAsBC,EAAQ,MAC/BA,IACAjB,EAAOkB,kBAAoBD,GAE/BV,EAAeP,GACVQ,MAAKC,IACEA,EAAKU,iBACLJ,EAAcA,EAAYK,OAAOX,EAAKU,iBAEvCJ,EAAcD,GACbT,EAAQU,GAEY,GAApBN,EAAKY,YACLL,EAAsBP,EAAKa,uBAE3BjB,EAAQU,EACZ,IAEHL,OAAMC,IACHL,EAAOK,EAAI,GAEvB,CACAK,GAAuB,GAE/B,CAQAJ,eAAeL,EAAeP,GAC1B,IAAIuB,EAAQ,CAAC,EACVvB,EAAOwB,SACND,EAAME,OAASzB,EAAOwB,QAEvBxB,EAAO0B,YACNH,EAAMI,UAAY3B,EAAO0B,WAE1B1B,EAAOkB,oBACNK,EAAM,sBAAwBvB,EAAOkB,mBAQzC,MAAMU,EAAM,WAAW5B,EAAOC,wCAExB4B,EAAcC,OAAOC,QAAQR,GAC9BS,KAAI,EAAEC,EAAK7D,KAAW,GAAG8D,mBAAmBD,MAAQC,mBAAmB9D,OACvE+D,KAAK,KAEJC,EAAWR,EAAMC,EAEvB,IAAIQ,QAAiBC,MAAMF,GAC3B,IAAIC,EAASE,GACT,MAAM,IAAIC,MAAM,uBAAuBH,EAASI,UAEpD,IAAIhC,QAAa4B,EAASK,OAGtBC,EAAS,IAAIC,UACbC,EAASF,EAAOG,gBAAgBrC,EAAK,YACrCsC,EAAS,CAAEC,SAAS,IAUxB,OARAD,EAAOC,SAAWC,MAAMC,KAAKL,EAAOM,qBAAqB,aAAanB,KAAIoB,IAAM,CAAElD,IAAKkD,EAAGD,qBAAqB,OAAO,GAAGE,gBACzHN,EAAO5B,eAAiB8B,MAAMC,KAAKL,EAAOM,qBAAqB,mBAAmBnB,KAAIoB,GAAMA,EAAGC,cAC/FN,EAAO1B,YAAcwB,EAAOM,qBAAqB,eAAe,GAAGE,YACnEN,EAAOvB,OAASqB,EAAOM,qBAAqB,UAAU,GAAGE,YAChC,QAAtBN,EAAO1B,cACN0B,EAAO1B,YACP0B,EAAOzB,sBAAwBuB,EAAOM,qBAAqB,yBAAyB,GAAGE,aAEpFN,CACX,CC/GO,SAASO,EAAiBC,GAC/B,MAAMC,EAAmB,CAAC,EAC1B,IAAK,MAAMC,KAAQF,EAAW,CAC5B,MAAMG,EAAaD,EAAKE,MAAM,KAAKC,MAAM,GACzC,GAAIF,EAAWvE,OAAS,EAAG,CACzB,MAAM0E,EAAYH,EAAWvB,KAAK,KAC9BqB,EAAiBK,GACnBL,EAAiBK,GAAWC,KAAKL,GAEjCD,EAAiBK,GAAa,CAACJ,EAEnC,CACF,CACA,OAAOD,CACT,CAEO,SAASO,EAAqBC,GACjC,MAAMC,EAAQD,EAASL,MAAM,KAC7B,IAAIO,EAAWD,EAAME,MACrB,MAAoB,KAAbD,EACHA,EAAWD,EAAME,MAErB,OAAOD,CACX,CAEO,SAASE,EAAcC,GAC5B,IAAItB,EAAS,GACb,IAAK,IAAItB,KAAU4C,EAAU,CACzB,IAAI5F,EAAasF,EAAqBtC,GACtCsB,EAAOe,KAAK,CAACrC,SAAQhD,cACzB,CACA,OAAOsE,CACT,CAoBO,SAASuB,EAAcC,EAAYC,GACxC,OAAOA,EAASjG,QAAOkG,GACdF,EAAWG,MAAKC,GACdF,EAAQ9F,SAASgG,EAAOT,cAEhClC,KAAIyC,IACL,MAAME,EAASJ,EAAWK,MAAKD,GACtBF,EAAQ9F,SAASgG,EAAOT,YAEjC,MAAO,CACLW,SAAUJ,EACVK,KAAMH,EAAOG,KACbC,QAASJ,EAAOI,QACjB,GAEL,CC7DO,MAAMC,GAAe,QAAY,CACpCC,GAAI,YACJC,MAAO,KAAM,CACTC,SAAU,EACVC,QAAStD,OAAOuD,KAAK,GAAU,GAE/BpG,SAAU,GACVF,QAAS,KAETuG,SAAU,GACVC,QAAS,KAETC,MAAO,GACPC,KAAM,GACNC,KAAM,GAENC,MAAO,GACPC,KAAM,KACNC,gBAAiB,GACjBC,SAAS,IAEbC,QAAS,CACL,UAAAC,GACI,OAAOC,KAAKH,OAChB,EAEA,UAAAI,GACI,OAAOD,KAAKd,SAASc,KAAKb,QAC9B,EACA,WAAAe,GACI,OAAOF,KAAKd,QAChB,EACA,aAAAiB,GACI,OAAOH,KAAKb,OAChB,EACA,WAAAiB,GACI,OAAOJ,KAAKhH,QAChB,EACA,UAAAqH,GACI,OAAOL,KAAKlH,OAChB,EAEA,WAAAwH,GACI,OAAON,KAAKX,QAChB,EACA,UAAAkB,GACI,OAAOP,KAAKV,OAChB,EAGA,QAAAkB,GACI,OAAOR,KAAKN,KAChB,EACA,WAAAe,GAEI,GAAiB,OAAdT,KAAKL,KAAe,OAAO,KAE9B,IAAI5F,EAAS,CACTC,OAAQgG,KAAKC,WAAWS,OACxBzG,IAAK+F,KAAKL,KAAKnC,MAEnB,OAAO1D,EAAOC,EAClB,EACA,OAAA4G,GACI,OAAOX,KAAKL,IAChB,EACA,aAAAiB,GACI,OAAGZ,KAAKT,MAAM,QAAUS,KAAKd,SAASc,KAAKb,SAAS0B,QACzC,MAERb,KAAKT,MAAM,QAAUS,KAAKd,SAASc,KAAKb,SAAS2B,SACzC,MAEJ,MACX,EACA,aAAAC,GACI,GAA0B,QAAvBf,KAAKY,cACJ,OAAOZ,KAAKC,WAAWe,OAE/B,EAEA,cAAAC,GACI,GAA0B,QAAvBjB,KAAKY,cACJ,OAAGZ,KAAKC,WAAWe,QACRhB,KAAKC,WAAWe,QAAQjF,KAAI2C,GAAUA,EAAOG,OAEjD,GAEX,GAA0B,QAAvBmB,KAAKY,cAAwB,CAC5B,IAAIM,EAAI7C,EAAc2B,KAAKC,WAAWa,SAAUd,KAAKR,MACrD,OAAO0B,EAAEnF,KAAIoF,GAAOA,EAAItC,MAC5B,CACA,MAAO,EACX,EAEA,sBAAAuC,GACI,OAAOpB,KAAKJ,eAChB,EAEA,OAAAyB,GAKI,GAA0B,QAAvBrB,KAAKY,cAAwB,CAC5B,IAAIM,EAAI7C,EAAc2B,KAAKC,WAAWa,SAASd,KAAKR,MAChD8B,EAAM,GACV,IAAI,IAAIH,KAAOD,EACX,GAAGlB,KAAKJ,gBAAgBlH,SAASyI,EAAItC,MAAM,CACvC,IAAIlD,EAAM7B,EAAO,CAACE,OAAQgG,KAAKC,WAAWS,OAAQzG,IAAKkH,EAAIvC,SAAUE,QAASqC,EAAIrC,UAC9EA,EAAUqC,EAAIrC,QAClBwC,EAAIzD,KAAK,CAAClC,MAAKmD,WACnB,CAEJ,OAAOwC,CACX,CACA,OAAO,IACX,EACA,SAAAC,GACI,IAAIC,EAAMxB,KAAKP,KAAKnH,QAAOkJ,GAAOA,EAAI9I,SAASsH,KAAKC,WAAWY,QAAQ5C,YACvE,GAAmB,IAAfuD,EAAItI,OACJ,OAAO,KACJ,GAAIsI,EAAItI,OAAS,EACpB,MAAM,IAAIqD,MAAM,wBAAwByD,KAAKC,WAAWY,QAAQ5C,mBAEhE,OAAOnE,EAAO,CAACE,OAAQgG,KAAKC,WAAWS,OAAQzG,IAAKuH,EAAI,IAEhE,EACA,OAAAC,GACI,OAAOzB,KAAKT,MAAM,MACtB,GAEJmC,QAAS,CACL,UAAAC,CAAWC,GACP5B,KAAKH,QAAU+B,CACnB,EACA,gBAAMC,CAAW7F,GACb,KAAGA,KAAOgE,KAAKd,UAgBX,MAAM,IAAI3C,MAAM,oBAAoBP,gBAfpCgE,KAAKT,MAAQ,GACbS,KAAKR,KAAO,GACZQ,KAAKP,KAAO,GACZO,KAAKN,MAAQ,GACbM,KAAKL,KAAO,KACZK,KAAKhH,SAAW,GAChBgH,KAAKlH,QAAU,KACfkH,KAAKX,SAAW,GAChBW,KAAKV,QAAU,KACfU,KAAKJ,gBAAkB,GACvBI,KAAKb,QAAUnD,QACTgE,KAAK8B,uBACL9B,KAAK+B,uBACL/B,KAAKgC,aAInB,EACA,YAAAC,CAAapD,IACLmB,KAAKJ,gBAAgBlH,SAASmG,IAASmB,KAAKiB,eAAevI,SAASmG,IACpEmB,KAAKJ,gBAAgB/B,KAAKgB,EAElC,EACA,cAAAqD,CAAerD,GACRmB,KAAKJ,gBAAgBlH,SAASmG,KAC7BmB,KAAKJ,gBAAkBI,KAAKJ,gBAAgBtH,QAAOoG,GAAUA,IAAWG,IAEhF,EAEA,oBAAMiD,GACF,IAAI/H,EAAS,CACTC,OAAQgG,KAAKC,WAAWS,OACxBnF,OAAQyE,KAAKC,WAAWzE,OACxBC,UAAW,KAEX2C,QAAiBxD,EAAmBb,EAAQiG,KAAKC,WAAWkC,kBAChEnC,KAAKhH,SAAWmF,EAAcC,GAC9B4B,KAAKlH,QAAUkH,KAAKhH,SAAS,EAEjC,EACA,gBAAMoJ,CAAWtJ,GACbkH,KAAKT,MAAQ,GACbS,KAAKR,KAAO,GACZQ,KAAKP,KAAO,GACZO,KAAKN,MAAQ,GACbM,KAAKL,KAAO,KACZK,KAAKX,SAAW,GAChBW,KAAKV,QAAU,KACfU,KAAKlH,QAAUA,QAETkH,KAAK+B,uBACL/B,KAAKgC,aACf,EAUA,oBAAMD,GACF,GAAG/B,KAAKK,WAAW,CACf,IAAIvD,EAAS,GACT/C,EAAS,CACTC,OAAQgG,KAAKC,WAAWS,OACxBnF,OAAQyE,KAAKK,WAAW7E,OACxBC,UAAW,KAEX2C,QAAiBxD,EAAmBb,EAAQ,KAEhD,OADA+C,EAASqB,EAAcC,GACH,GAAjBtB,EAAO5D,QACN8G,KAAKX,SAAY,CAAC,CAAC7D,OAAQwE,KAAKK,WAAW7E,OAAQhD,WAAY,cAC/DwH,KAAKV,QAAUU,KAAKX,SAAS,MAG7BW,KAAKX,SAAWvC,OAChBkD,KAAKV,QAAUU,KAAKX,SAAS,IAGrC,CACJ,EACA,UAAAgD,CAAW/C,GACPU,KAAKT,MAAQ,GACbS,KAAKR,KAAO,GACZQ,KAAKP,KAAO,GACZO,KAAKN,MAAQ,GACbM,KAAKL,KAAO,KACZK,KAAKV,QAAUA,EACfU,KAAKgC,aACT,EAGA,iBAAMA,GACF,IAAIjI,EAAS,CACTC,OAAQgG,KAAKC,WAAWS,OACxBnF,OAAQyE,KAAKO,WAAW/E,QAE5BlC,QAAQC,IAAIQ,GACZ,IAAIwF,QAAcrF,EAAYH,GAC1BqF,EAAOG,EAAMxC,SAAShB,KAAKxD,GAASA,EAAK0B,MAC7C,IAAIsD,EAAmBF,EAAiB+B,GAIxC,GAAGY,KAAKC,WAAWqC,WACf,IAAI,IAAIC,KAAavC,KAAKC,WAAWqC,WAAY,CAC7C,IAAIvI,EAAS,CACTC,OAAQgG,KAAKC,WAAWS,OACxBnF,OAAQyE,KAAKO,WAAW/E,OAAS+G,EAAU/E,KAC3C/B,UAAW,KAEX+G,QAAuBtI,EAAYH,GACnC0I,EAAgBD,EAAezF,SAAShB,KAAKxD,GAASA,EAAK0B,MAC3DyI,EAA4BrF,EAAiBoF,GACjDlF,EAAiBgF,EAAU3E,WAAa8E,EAA0BH,EAAU3E,UAChF,CAEJoC,KAAKT,MAAQhC,EACVyC,KAAKT,MAAM,WACVS,KAAK2C,YAAY3C,KAAKT,MAAM,WAE7BS,KAAKT,MAAM,OACVS,KAAKR,KAAOQ,KAAKT,MAAM,OAEvBS,KAAKR,KAAO,GAEbQ,KAAKT,MAAM,OACVS,KAAKP,KAAOO,KAAKT,MAAM,OAEvBS,KAAKP,KAAO,EAGpB,EACA,WAAAkD,CAAYC,GACR,GAAIA,EAAK1J,OAAS,EAAG,CAEjB,IAAI4D,EAAS8F,EAAKC,QAAO,CAACC,EAAKtF,KAC3BwC,KAAKC,WAAWP,MAAMqD,SAASlE,IACvBrB,EAAK9E,SAASmG,IACdiE,EAAIjF,KAAK,CAAEgB,OAAMrB,QACrB,IAEGsF,IACR,IAGH,GAFA9C,KAAKN,MAAQ5C,EAEVkD,KAAKW,QAAQ,CACZ,IAAIqC,EAAehD,KAAKN,MAAMf,MAAKgB,GAAQA,EAAKd,OAASmB,KAAKW,QAAQ9B,OAElEmB,KAAKL,KADNqD,GAGahD,KAAKN,MAAM,EAE/B,MACOM,KAAKN,MAAMf,MAAKgB,GAAQA,EAAKd,MAAQmB,KAAKC,WAAWP,MAAM,KAC1DM,KAAKL,KAAOK,KAAKN,MAAMf,MAAKgB,GAAQA,EAAKd,MAAQmB,KAAKC,WAAWP,MAAM,KAEvEM,KAAKL,KAAOK,KAAKN,MAAM,EAGnC,MACIM,KAAKN,MAAQ,GACbM,KAAKL,KAAO,IAEpB,EACA,OAAAsD,CAAQtD,GACJK,KAAKL,KAAOA,CAChB,K,iQCvRFuD,EAAM,6J,sCAPZ,MAAMC,EAAYpE,IAElB,IAAIqE,EAAK,KACLC,GAAkB,EAElBC,EAAe,KACfC,EAAO,GAGX,SAASC,IACLJ,EAAK,KACLA,EAAK,IAAI,KAAO,CAAEK,iBAAiB,EAAMC,UAAW,CAAC,EAAG,EAAG,EAAG,KAC9DN,EAAGO,SAAS,MACZP,EAAGQ,aAAaR,EAAGS,sBACnBT,EAAGU,aAAa,EAAE,GAAK,IAAK,IAC5BV,EAAGW,kBAAkB,CAAC,GAAK,GAAK,GAAK,IACzC,CAEA,SAASC,IACFb,EAAU5B,WACT0C,OAAOC,KAAKf,EAAU5B,UAE9B,CAEA,SAAS4C,IACLF,OAAOC,KAAKf,EAAU1C,YAC1B,CAMA9F,eAAeyJ,EAAWC,GAItB,GAHAhB,GAAkB,QACZD,EAAGkB,YAAY,CAAC,CAAE3I,IAAK0I,EAAYE,SAAU,gBAC7CnB,EAAGoB,iBACNlB,EAAa,CACZ,IAAImB,EAAOnB,EACXA,EAAe,KACfc,EAAWK,EACf,CACApB,GAAkB,EACY,OAA3BF,EAAUvC,eACF8D,GAAoBC,IACnBC,EAAiBF,EAAiBC,GAClCD,EAAmB,KACnBC,EAAmB,KAInC,CAEA,SAASE,IACHzB,EAAG0B,MAAMC,mBAA0B,GAALxB,EAC9BH,EAAG4B,WACT,EA3BA,SAAU,KACNxB,GAAM,IA2BV,MAAMyB,GAAe,SAAI,GAEzBtK,eAAeuK,EAAYvJ,GAMvB,GALArC,QAAQC,IAAI,eACZ0L,EAAa9M,OAAQ,EACjBiL,EAAG+B,mBACG/B,EAAGI,OAEVJ,EAAGgC,GAAG,CACL,IAAIC,EAAW,CAAC,CAAC1J,MAAKmD,QAAS,CAAC,IAAK,IAAK,EAAG,OAI7C,aAHMsE,EAAGkC,WAAWD,GACpBJ,EAAa9M,OAAQ,OACrBmB,QAAQC,IAAI,aAEhB,CAEJ,CAEA,SAASgM,IACL,GAAgB,GAAbC,EACC,OAEJ,IAAIC,EAAO,CACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEP7E,EAAUmC,EAAUpC,cACxB,IAAI,IAAI+E,EAAE,EAAEA,EAAE9E,EAAQ9H,OAAO4M,IACtB3C,EAAU/B,uBAAuB1I,SAASsI,EAAQ8E,GAAGjH,QACpD4G,EAAKC,EAAE7H,KAAKmD,EAAQ8E,GAAGhH,QAAQ,IAC/B2G,EAAKE,EAAE9H,KAAKmD,EAAQ8E,GAAGhH,QAAQ,IAC/B2G,EAAKG,EAAE/H,KAAKmD,EAAQ8E,GAAGhH,QAAQ,IAC/B2G,EAAKI,EAAEhI,KAAKmD,EAAQ8E,GAAG/M,QAG/BqK,EAAG2C,gBAAgB3C,EAAG4C,OAAO,GAAGhH,GAAI,qBAAsByG,EAE9D,CAGA9K,eAAeiK,EAAiBqB,EAAWC,GACvC,GAAiB,MAAdD,GAAoC,MAAdC,EAAmB,CACxC,MAAMC,EAAiBD,EAAW5N,QAAOC,IAAS0N,EAAWvN,SAASH,KAChE6N,EAAeH,EAAW3N,QAAOC,IAAS2N,EAAWxN,SAASH,KAMpE,GAJG4N,EAAejN,OAAS,GACvBmN,EAAiBF,EAAepK,KAAI2C,GAAUA,EAAO/C,OAGtDyK,EAAalN,OAAS,EACrB,IAAI,IAAI4M,EAAE,EAAEA,EAAEM,EAAalN,OAAO4M,IAAI,CAClC,IAAIpH,EAAS0H,EAAaN,SACpBQ,EAAc5H,EAAO/C,IAAI+C,EAAOI,QAC1C,CAEJ,IAAI,IAAIgH,EAAE,EAAGA,EAAE1C,EAAG4C,OAAO9M,OAAO4M,UACd1C,EAAG2C,gBAAgB3C,EAAG4C,OAAOF,GAAG9G,GAAI,aAAa,QAEvE,CACJ,CAEA,SAASqH,EAAiBE,GACtB,IAAI,IAAIT,EAAI,EAAGA,EAAIS,EAAKrN,OAAQ4M,IAC5B1C,EAAGoD,gBAAgBD,EAAKT,GAEhC,CAEAnL,eAAe2L,EAAc3K,EAAImD,GAK/B,GAJKsE,EAAG+B,mBACA/B,EAAGI,OAGPJ,EAAGgC,GAAP,CACE,IAAIqB,EAAc,CAAC9K,MAAKmD,UAASsG,GAAIhC,EAAGgC,UAClChC,EAAGsD,eAAeD,EAI1B,MADEnN,QAAQqN,MAAM,mCAElB,CAEAhM,eAAeiM,IACX,IAAI,IAAId,EAAE,EAAGA,EAAE1C,EAAG4C,OAAO9M,OAAO4M,UACtB1C,EAAGyD,WAAWzD,EAAG4C,OAAOF,GAAG9G,GAEzC,CACA,IAAIwG,GAAY,EACZsB,GAAa,GACjB,SAAM,IAAM3D,EAAU/B,yBAAwBzG,MAAOxB,EAAU4N,KACxD5N,GAAY4N,GACmB,OAA3B5D,EAAUvC,eACO,GAAb4E,GACCD,GAGZ,IAGJ,IAAIb,EAAmB,KACnBC,EAAmB,K,OAEvB,SAAM,IAAMxB,EAAU9B,UAAS,CAAC4E,EAAWC,KACpCD,GAAyC,OAA3B9C,EAAUvC,gBACP,GAAb4E,IACCoB,IACApB,GAAY,GAEZnC,GAGAqB,EAAmBuB,EACnBtB,EAAmBuB,GAHnBtB,EAAiBqB,EAAWC,GAKpC,KAGJ,SAAM,IAAM/C,EAAU1C,cAAa9F,MAAOqM,IACtC,GAAGA,EACC,GAAI3D,EAkBe2D,OAhBf,SADM5C,EAAW4C,GACa,OAA3B7D,EAAUvC,eAA0BuC,EAAU5B,YAAciE,IAAcsB,EAAW,CACpFA,GAAa,QACP5B,EAAY/B,EAAU5B,WAC5BgE,IACA,IAAIE,EAAO,CACPC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEPzC,EAAG2C,gBAAgB3C,EAAG4C,OAAO,GAAGhH,GAAI,qBAAsByG,GAC1DqB,GAAa,EACbtB,GAAY,EACZrC,EAAUvD,gBAAkBuD,EAAUlC,cAC1C,CAIR,KAGJ,SAAM,IAAMkC,EAAU9C,aAAY1F,gBACxBiM,IACNpB,GAAY,CAAK,I,soBChOrB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,gGCHA,MAAMrC,EAAYpE,IACZkI,GAAc,UACdC,GAAQ,QAAS,CACnB,GAAAjP,GACI,IAAI8B,EAAS,CACTC,OAAQmJ,EAAUlD,WAAWS,OAC7BzG,IAAKgN,EAAY9O,OAErB,OAAO2B,EAAOC,EAClB,IAOJ,SAASoN,EAAe3J,GACpB,IAAI4J,EAAW5J,EAAKE,MAAM,KAAKQ,MAAMR,MAAM,KAAK2J,QAChD,OAAOD,CACX,C,OARA,SAAM,IAAMjE,EAAU1B,UAAS,KAC3BwF,EAAY9O,MAAQ,IAAI,I,ggBCZ5B,MAAM,GAAc,GAEpB,U,6JC0BA,MAAMgL,EAAYpE,IAEZI,GAAU,QAAS,CACrB,GAAAlH,GACI,OAAOkL,EAAUhD,aACrB,EACA,GAAAjI,CAAIC,GACA,OAAOgL,EAAUtB,WAAW1J,EAChC,IAEEW,GAAU,QAAS,CACrB,GAAAb,GACI,OAAOkL,EAAU9C,UACrB,EACA,GAAAnI,CAAIC,GACA,OAAOgL,EAAUf,WAAWjK,EAChC,IAEEwH,GAAO,QAAS,CAClB,GAAA1H,GACI,OAAOkL,EAAUxC,OACrB,EACA,GAAAzI,CAAIC,GACA,OAAOgL,EAAUF,QAAQ9K,EAC7B,IAGEmH,GAAU,QAAS,CACrB,GAAArH,GACI,OAAOkL,EAAU5C,UACrB,EACA,GAAArI,CAAIC,GACA,OAAOgL,EAAUd,WAAWlK,EAChC,IAGEyH,GAAkB,QAAS,CAC7B,GAAA3H,GACI,OAAOkL,EAAU/B,sBACrB,EACA,GAAAlJ,CAAIC,GACA,OAAOgL,EAAUvD,gBAAkBzH,CACvC,I,OAEJ,SAAU,KACNgL,EAAUtB,WAAWsB,EAAUhD,cAAc,I,m6CCzEjD,MAAM,GAAc,GAEpB,UCHA,MAAMmH,IAAM,QAAUC,IAChB,IAAQ,UAEdD,GAAIE,IAAI,IACRF,GAAIG,MAAM,O,GCPNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,WCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS5C,EAAI,EAAGA,EAAIqC,EAASjP,OAAQ4M,IAAK,CACrCwC,EAAWH,EAASrC,GAAG,GACvByC,EAAKJ,EAASrC,GAAG,GACjB0C,EAAWL,EAASrC,GAAG,GAE3B,IAJA,IAGI6C,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASpP,OAAQ0P,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAa3M,OAAOuD,KAAKuI,EAAoBS,GAAGS,OAAM,SAAS7M,GAAO,OAAO2L,EAAoBS,EAAEpM,GAAKsM,EAASM,GAAK,IAChKN,EAASQ,OAAOF,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASW,OAAOhD,IAAK,GACrB,IAAIiD,EAAIR,SACET,IAANiB,IAAiBV,EAASU,EAC/B,CACD,CACA,OAAOV,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAI1C,EAAIqC,EAASjP,OAAQ4M,EAAI,GAAKqC,EAASrC,EAAI,GAAG,GAAK0C,EAAU1C,IAAKqC,EAASrC,GAAKqC,EAASrC,EAAI,GACrGqC,EAASrC,GAAK,CAACwC,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoBqB,EAAI,SAASjB,EAASkB,GACzC,IAAI,IAAIjN,KAAOiN,EACXtB,EAAoBuB,EAAED,EAAYjN,KAAS2L,EAAoBuB,EAAEnB,EAAS/L,IAC5EH,OAAOsN,eAAepB,EAAS/L,EAAK,CAAEoN,YAAY,EAAMnR,IAAKgR,EAAWjN,IAG3E,C,eCPA2L,EAAoB0B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOtJ,MAAQ,IAAIuJ,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXvF,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB0D,EAAoBuB,EAAI,SAASO,EAAKC,GAAQ,OAAO7N,OAAO8N,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,C,eCKtG,IAAII,EAAkB,CACrB,IAAK,GAaNnC,EAAoBS,EAAEQ,EAAI,SAASmB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BzP,GAC/D,IAKIoN,EAAUmC,EALVzB,EAAW9N,EAAK,GAChB0P,EAAc1P,EAAK,GACnB2P,EAAU3P,EAAK,GAGIsL,EAAI,EAC3B,GAAGwC,EAAS7J,MAAK,SAASO,GAAM,OAA+B,IAAxB8K,EAAgB9K,EAAW,IAAI,CACrE,IAAI4I,KAAYsC,EACZvC,EAAoBuB,EAAEgB,EAAatC,KACrCD,EAAoBO,EAAEN,GAAYsC,EAAYtC,IAGhD,GAAGuC,EAAS,IAAI9B,EAAS8B,EAAQxC,EAClC,CAEA,IADGsC,GAA4BA,EAA2BzP,GACrDsL,EAAIwC,EAASpP,OAAQ4M,IACzBiE,EAAUzB,EAASxC,GAChB6B,EAAoBuB,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOpC,EAAoBS,EAAEC,EAC9B,EAEI+B,EAAqBC,KAAK,2BAA6BA,KAAK,4BAA8B,GAC9FD,EAAmBrH,QAAQiH,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBvM,KAAOmM,EAAqBM,KAAK,KAAMF,EAAmBvM,KAAKyM,KAAKF,G,IC/CvF,IAAIG,EAAsB5C,EAAoBS,OAAEN,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,IAAM,IAChH4C,EAAsB5C,EAAoBS,EAAEmC,E","sources":["webpack://tractoscope/./src/components/SearchableListSelect.vue","webpack://tractoscope/./src/components/SearchableListSelect.vue?c814","webpack://tractoscope/./src/components/SubjectSelect.vue","webpack://tractoscope/./src/components/SubjectSelect.vue?e982","webpack://tractoscope/./src/components/MultiSelect.vue","webpack://tractoscope/./src/components/MultiSelect.vue?bb2a","webpack://tractoscope/./src/components/ToolTip.vue","webpack://tractoscope/./src/components/ToolTip.vue?7d0b","webpack://tractoscope/./src/utilites/awsHelper.js","webpack://tractoscope/./src/utilites/logic.js","webpack://tractoscope/./src/utilites/dataStore.js","webpack://tractoscope/./src/components/NiivueRender.vue","webpack://tractoscope/./src/components/NiivueRender.vue?3bc7","webpack://tractoscope/./src/components/PngViewer.vue","webpack://tractoscope/./src/components/PngViewer.vue?0d37","webpack://tractoscope/./src/App.vue","webpack://tractoscope/./src/App.vue?7ccd","webpack://tractoscope/./src/main.js","webpack://tractoscope/webpack/bootstrap","webpack://tractoscope/webpack/runtime/chunk loaded","webpack://tractoscope/webpack/runtime/define property getters","webpack://tractoscope/webpack/runtime/global","webpack://tractoscope/webpack/runtime/hasOwnProperty shorthand","webpack://tractoscope/webpack/runtime/jsonp chunk loading","webpack://tractoscope/webpack/startup"],"sourcesContent":["<template>\n    <div class = \"search-select\">\n      <input v-model=\"searchQuery\" placeholder=\"Search Subjects...\" @input=\"filterList\" />\n      <select v-model=\"selected\">\n        <option v-for=\"(item,index) in filteredList\" :value=\"item\" :key=\"index\">\n          {{ item.folderName }}\n        </option>\n      </select>\n    </div>\n  </template>\n\n<script setup>\nimport {ref, computed} from 'vue'\nconst emit = defineEmits(['update:selected'])\nconst props = defineProps({\n    list: {\n        type: Array,\n        required: true,\n    },\n    selected: {\n        type: [String, Object],\n        default: \"\"\n    }})\n\nconst searchQuery = ref(\"\")\nconst selected = computed({\n    get(){\n        return props.selected\n    },\n    set(value){\n        emit('update:selected',value)\n    }\n})\nconst filteredList = computed({\n    get(){\n        return props.list.filter(item => item.folderName.toLowerCase().includes(searchQuery.value.toLowerCase()))\n    }\n})\n</script>\n\n<style scoped>\n.search-select {\n    display: flex;\n    flex-direction: column;\n    gap: 0px;\n    width: 200px;\n}\n</style>","import script from \"./SearchableListSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SearchableListSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SearchableListSelect.vue?vue&type=style&index=0&id=6d6b3e46&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6d6b3e46\"]])\n\nexport default __exports__","<template>\n<div id=\"buttons\">\n<SearchableListSelect v-model:selected=\"subject\" :list=\"subjects\" id=\"select\"/>\n<button @click=\"incrementSubject(-1)\">&lt;</button>\n<button @click=\"incrementSubject(1)\">&gt;</button>\n</div>\n</template>\n\n<script setup>\nimport SearchableListSelect from './SearchableListSelect.vue';\nimport {computed} from 'vue'\n\nconst props = defineProps({\n    subject: {}, //this prop has no requirments as it is only set by this component, not read\n    subjects: {type: Array, required: true}\n})\n\nconst emit = defineEmits(['update:subject'])\n\nfunction incrementSubject(increment){\n    if(props.subject){\n        let index = props.subjects.indexOf(props.subject)\n        index += increment\n        if(index >= 0 && index < props.subjects.length){\n            subject.value = props.subjects[index]\n        }\n    }\n}\nconst subject = computed({\n    get(){\n        return props.subject\n    },\n    set(value){\n        emit('update:subject',value)\n    },\n})\n\n\n</script>\n\n\n<style scoped>\n.buttons{\n    padding-left: 0px;\n    padding-right: 0px;\n}\n.select{\n    padding-left: 0px;\n    padding-right: 0px;\n}\n</style>","import script from \"./SubjectSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SubjectSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SubjectSelect.vue?vue&type=style&index=0&id=907e2988&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-907e2988\"]])\n\nexport default __exports__","<script setup>\nimport {computed, defineProps, defineEmits, ref} from 'vue'\n\n\nconst props = defineProps({\n    items: {type: Array, required: true},\n    selected:{type: Array, required: true}\n})\n\nconst emit = defineEmits(['update:selected'])\n\n\nconst selected = computed({\n    get(){\n        return props.selected;\n    },\n    set(value){\n        const newValue = [...selected.value, value];\n        emit('update:selected', newValue);\n    }\n});\n\nconst selectValue = ref(\"select a bundle\");\n\nconst select = computed({\n    get(){\n        return selectValue.value;\n    },\n    set(value){\n        const newValue = [...selected.value, value];\n        emit('update:selected', newValue);\n        console.log(\"resetting value\")\n        // Reset the selectValue to the default value\n        selectValue.value = \"select a bundle\";\n    }\n});\n\nconst filteredItems = computed(() => {\n    return props.items.filter(item => !props.selected.includes(item))\n})\n\n\n\nfunction removeItem(item){\n    const updatedSelection = selected.value.filter(selectedItem => selectedItem !== item);\n    emit('update:selected',updatedSelection)\n}\nfunction toggleAll(){\n   if(selected.value.length > 0){\n        emit('update:selected',[])\n    }else{\n        emit('update:selected',props.items)\n    }\n}\n</script>\n\n<template>\n    <div id=\"multiselect\">\n        <select v-model=\"select\">\n            <option selected disabled value=\"select a bundle\">select a bundle</option>\n            <option v-for=\"(item,index) in filteredItems\" :value=\"item\" :key=\"index\">{{ item }}</option>\n        </select>\n        <button @click=\"toggleAll()\">toggle all</button>\n        <div id=\"scrollBox\">\n            <ul id=\"remove\">\n                <li v-for=\"(item,index) in selected\" :key=\"index\"><button @click=\"removeItem(item)\">x</button>{{ item }}</li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n#multiselect{\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n#scrollBox {\n  border: none;\n  padding: 5px;\n  width: 200px;\n  max-height: 200px;\n  overflow: auto;\n}\nul#remove {\n    list-style-type: none;\n    padding: 0;\n}\n</style>","import script from \"./MultiSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MultiSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MultiSelect.vue?vue&type=style&index=0&id=2ac813db&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ac813db\"]])\n\nexport default __exports__","<template>\n    <div class=\"tooltip\"><slot />\n        <span class=\"tooltiptext\">{{ props.tip }}</span>\n    </div>\n</template>\n\n<script setup>\nconst props = defineProps({tip:{type:String,required:true}})\n</script>\n<style scoped>\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  border-bottom: 1px dotted black;\n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n  width: 400px;\n  bottom: 100%;\n  left: 200%;\n  margin-left: -60px;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n</style>","import script from \"./ToolTip.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToolTip.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ToolTip.vue?vue&type=style&index=0&id=321e8a09&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-321e8a09\"]])\n\nexport default __exports__","//returns https link to object at key\nexport function getUrl(params){\n    return `https://${params.Bucket}.s3.amazonaws.com/${params.Key}`;\n\n}\n//expects params{Bucket, Key}\n//returns https link to object at key\nexport async function getSignedUrl(params) {\n\n    return new Promise((resolve, reject) => {\n        const url = `https://${params.Bucket}.s3.amazonaws.com/{params.Key}`;\n        resolve(url);\n    });\n}\n\n//expects params{Bucket, Prefix, MaxKeys (optional)}\n//returns a promise that resolves to an array of objects\n//will only return up to 1000 objects\nexport function listObjects(params) {\n    return new Promise((resolve, reject) => {\n        fetchObjectsV2(params)\n            .then(data => {\n                resolve(data);\n            })\n            .catch(err => {\n                reject(err);\n            });\n    });\n}\n\n\n//returns all objects with common prefix in params, up to the object limit\nexport async function listCommonPrefixes(params,limit) {\n    return new Promise((resolve, reject) => {\n        let allPrefixes = [];\n\n        function listNextSetOfPrefixes(token = null) {\n            if (token) {\n                params.ContinuationToken = token;\n            }\n            fetchObjectsV2(params)\n                .then(data => {\n                    if (data.CommonPrefixes) {\n                        allPrefixes = allPrefixes.concat(data.CommonPrefixes);\n                    }\n                    if(allPrefixes > limit ){\n                        resolve(allPrefixes)\n                    }\n                    if (data.IsTruncated == true) {\n                        listNextSetOfPrefixes(data.NextContinuationToken);\n                    } else {\n                        resolve(allPrefixes);\n                    }\n                })\n                .catch(err => {\n                    reject(err);\n                });\n        }\n        listNextSetOfPrefixes();\n    });\n}\n/**\n * Fetches objects from an S3 bucket using version 2 of the list objects\n * @async\n * @param {Object} params - An object containing the parameters for the request.\n * @returns {Document} The XML document containing the list of objects.\n * @throws {Error} Throws an error if the HTTP request fails.\n */\nasync function fetchObjectsV2(params){\n    let query = {}\n    if(params.Prefix){\n        query.prefix = params.Prefix\n    }\n    if(params.Delimiter){\n        query.delimiter = params.Delimiter\n    }\n    if(params.ContinuationToken){\n        query['continuation-token'] = params.ContinuationToken\n    }\n    // if(params.ContinuationToken){\n    //     query['continuation-token'] = params.ContinuationToken\n    // }else{\n    //     query['continuation-token'] = '1SMGuYwSAoGBZM53Q40LLNhy8kTr1mxgzF%2Bnuxb1y9w2gKaRlKi1pKvP2dq9FtBVIw4HYAPL2VLhwFnIkqMjMo0vIEnJa3owG69NVwi8wON63U2n2Ln06cA%3D%3D'\n    // }\n\n    const url = `https://${params.Bucket}.s3.amazonaws.com/?list-type=2&`;\n\n    const queryString = Object.entries(query)\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n        .join('&');\n\n    const toFetch = (url + queryString);\n\n    let response = await fetch(toFetch);\n    if(!response.ok){\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    let data = await response.text();\n\n\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(data,\"text/xml\");\n    let output = { Contents:[]}\n\n    output.Contents = Array.from(xmlDoc.getElementsByTagName('Contents')).map(el => ({Key: el.getElementsByTagName('Key')[0].textContent}));\n    output.CommonPrefixes = Array.from(xmlDoc.getElementsByTagName('CommonPrefixes')).map(el => el.textContent);\n    output.IsTruncated = xmlDoc.getElementsByTagName('IsTruncated')[0].textContent;\n    output.Prefix = xmlDoc.getElementsByTagName('Prefix')[0].textContent;\n    if(output.IsTruncated == 'true'){\n        output.IsTruncated == true;\n        output.NextContinuationToken = xmlDoc.getElementsByTagName('NextContinuationToken')[0].textContent;\n    }\n    return output\n}\n","//sorts filepaths by file extension\n//returns object with file extension as key paired with array of filepaths\nexport function groupByExtension(filePaths) {\n  const filesByExtension = {};\n  for (const path of filePaths) {\n    const extensions = path.split('.').slice(1);\n    if (extensions.length > 0) {\n      const extension = extensions.join('.');\n      if (filesByExtension[extension]) {\n        filesByExtension[extension].push(path);\n      } else {\n        filesByExtension[extension] = [path];\n      }\n    }\n  }\n  return filesByExtension;\n}\n\nexport function getLastPathComponent(filePath) {\n    const parts = filePath.split('/');\n    let fileName = parts.pop();\n    while (fileName === '') {\n        fileName = parts.pop();\n    }\n    return fileName;\n}\n\nexport function getSubfolders(prefixes){\n  let output = []\n  for (let prefix of prefixes) {\n      let folderName = getLastPathComponent(prefix);\n      output.push({prefix, folderName});\n  }\n  return output\n}\n\nexport function filterBySubfolder(files, folderPath) {\n    return files.filter((filePath) => {\n      const pathParts = filePath.split(\"/\");\n      const fileName = pathParts[pathParts.length - 1];\n      return filePath.startsWith(folderPath) && !fileName.includes(\"/\");\n    });\n}\n\n//returns all strings from list1 that contain a substring from list2\nexport function filterBySubstring(list1, list2) {\n  return list1.filter(str1 => list2.some(str2 => str1.includes(str2)));\n}\n\n//trk bundles = list of object, object = {name, fileName,rgba255}\n//trkpaths = list of file paths to trks\n//returns list of objects, where object = {filepath, name, rgba255}\n//and each object is a contains the filepath that includes the filename\n//and then its corresponding rgba255 and name values\nexport function getTrkBundles(trkBundles, trkPaths) {\n  return trkPaths.filter(trkPath => {\n    return trkBundles.some(bundle => {\n      return trkPath.includes(bundle.fileName);\n    });\n  }).map(trkPath => {\n    const bundle = trkBundles.find(bundle => {\n      return trkPath.includes(bundle.fileName);\n    });\n    return {\n      filepath: trkPath,\n      name: bundle.name,\n      rgba255: bundle.rgba255\n    };\n  });\n}","import { defineStore } from 'pinia'\nimport datasets from \"../../public/datasets.json\"\nimport {listObjects, listCommonPrefixes,getUrl} from \"./awsHelper.js\"\nimport {groupByExtension, getSubfolders, getTrkBundles} from \"./logic.js\"\n\n//here were creating a pinia store for all the logic surrounding the data we are getting from our aws bucket\n//we want to handle all the aws requests and data manipulation in one place.\n//we then provide the processed data and some setter functions to the components that need it\nexport const useDataStore = defineStore({\n    id: 'dataStore',\n    state: () => ({\n        datasets: datasets,\n        dataset: Object.keys(datasets)[0],\n\n        subjects: [],\n        subject: null,\n\n        sessions: [],\n        session: null,\n\n        files: [],\n        trks: [],\n        trxs: [],\n\n        scans: [],\n        scan: null,\n        selectedBundles: [],\n        loadTrx: false,\n    }),\n    getters: {\n        getLoadTrx(){\n            return this.loadTrx;\n        },\n        //Dataset functions\n        getDataset(){\n            return this.datasets[this.dataset];\n        },\n        getDatasets(){\n            return this.datasets;\n        },\n        getDatasetKey(){\n            return this.dataset;\n        },\n        getSubjects(){\n            return this.subjects;\n        },\n        getSubject(){\n            return this.subject;\n        },\n\n        getSessions(){\n            return this.sessions;\n        },\n        getSession(){\n            return this.session;\n        },\n\n         //scans\n        getScans(){\n            return this.scans;\n        },\n        getScanLink() {\n            //check if scan is selected\n            if(this.scan === null) return null\n            //return link to scan\n            let params = {\n                Bucket: this.getDataset.bucket,\n                Key: this.scan.path\n            }\n            return getUrl(params)\n        },\n        getScan(){\n            return this.scan;\n        },\n        getBundleType(){\n            if(this.files[\"trx\"] && this.datasets[this.dataset].trxFile){\n                return \"trx\";\n            }\n            if(this.files[\"trk\"] && this.datasets[this.dataset].trkFiles){\n                return \"trk\";\n            }\n            return \"none\";\n        },\n        getTrxBundles(){\n            if(this.getBundleType === \"trx\"){\n                return this.getDataset.bundles;\n            }\n        },\n        //returns a list of all bundle names\n        getBundleNames(){\n            if(this.getBundleType === \"trx\"){\n                if(this.getDataset.bundles){\n                    return this.getDataset.bundles.map(bundle => bundle.name);\n                }\n                return [];\n            }\n            if(this.getBundleType === \"trk\"){\n                let x = getTrkBundles(this.getDataset.trkFiles, this.trks)\n                return x.map(trk => trk.name);\n            }\n            return [];\n        },\n        //this returns a list of bundle names\n        getSelectedBundleNames(){\n            return this.selectedBundles;\n        },\n        //this returns a list of links for bundles\n        getTrks(){\n            //\n            // let x = getTrkBundles(this.getDataset.trkFiles, this.trks).filter(trk =>\n            //     this.selectedBundles.includes(trk.name)).map(trk =>\n            //         {name:trk.name, getUrl({Bucket: this.getDataset.bucket, Key: trk.filepath, rgba255: trk.rgba255})});\n            if(this.getBundleType === \"trk\"){\n                let x = getTrkBundles(this.getDataset.trkFiles,this.trks)\n                let out = [];\n                for(let trk of x){\n                    if(this.selectedBundles.includes(trk.name)){\n                        let url = getUrl({Bucket: this.getDataset.bucket, Key: trk.filepath, rgba255: trk.rgba255})\n                        let rgba255 = trk.rgba255;\n                        out.push({url, rgba255});\n                    }\n                }\n                return out;\n            }\n            return null;\n        },\n        getTrxUrl() {\n            let trx = this.trxs.filter(trx => trx.includes(this.getDataset.trxFile.fileName));\n            if (trx.length === 0) {\n                return null;\n            } else if (trx.length > 1) {\n                throw new Error(`Multiple versions of ${this.getDataset.trxFile.fileName} found.`);\n            } else {\n                return getUrl({Bucket: this.getDataset.bucket, Key: trx[0]});\n            }\n        },\n        getPngs(){\n            return this.files[\"png\"];\n        }\n    },\n    actions: {\n        setLoadTrx(val){\n            this.loadTrx = val;\n        },\n        async setDataset(key){\n            if(key in this.datasets){\n                this.files = [];\n                this.trks = [];\n                this.trxs = [];\n                this.scans = [];\n                this.scan = null;\n                this.subjects = [];\n                this.subject = null;\n                this.sessions = [];\n                this.session = null;\n                this.selectedBundles = [];\n                this.dataset = key;\n                await this.updateSubjects();\n                await this.updateSessions();\n                await this.updateFiles();\n            } else {\n                throw new Error(`Dataset with key ${key} not found.`);\n            }\n        },\n        selectBundle(name){\n            if(!this.selectedBundles.includes(name) && this.getBundleNames.includes(name)){\n                this.selectedBundles.push(name);\n            }\n        },\n        deselectBundle(name){\n            if(this.selectedBundles.includes(name)){\n                this.selectedBundles = this.selectedBundles.filter(bundle => bundle !== name);\n            }\n        },\n        //subjects\n        async updateSubjects() {\n            let params = {\n                Bucket: this.getDataset.bucket,\n                Prefix: this.getDataset.prefix,\n                Delimiter: \"/\"\n            }\n            let prefixes = await listCommonPrefixes(params, this.getDataset.participantsSize);\n            this.subjects = getSubfolders(prefixes);\n            this.subject = this.subjects[0];\n            return\n        },\n        async setSubject(subject){\n            this.files = [];\n            this.trks = [];\n            this.trxs = [];\n            this.scans = [];\n            this.scan = null;\n            this.sessions = [];\n            this.session = null;\n            this.subject = subject;\n\n            await this.updateSessions();\n            await this.updateFiles();\n        },\n\n        //sessions\n        //this will fail if there are subfolders, but no folder for sessions\n        //for example\n        //          subject-|\n        //                  |-bundles-|\n        //                  |-clean_bundles-|\n        //for this it would set sessions = [bundles,clean_bundles]\n        //if there is no folder for sessions it will return [{prefix: subject.value.prefix, folderName: \"root\"}]\n        async updateSessions(){\n            if(this.getSubject){\n                let output = [];\n                let params = {\n                    Bucket: this.getDataset.bucket,\n                    Prefix: this.getSubject.prefix,\n                    Delimiter: \"/\"\n                }\n                let prefixes = await listCommonPrefixes(params, 100);\n                output = getSubfolders(prefixes);\n                if(output.length == 0){\n                    this.sessions =  [{prefix: this.getSubject.prefix, folderName: \"root\"}];\n                    this.session = this.sessions[0];\n                    return\n                }else{\n                    this.sessions = output;\n                    this.session = this.sessions[0];\n                    return\n                }\n            }\n        },\n        setSession(session){\n            this.files = [];\n            this.trks = [];\n            this.trxs = [];\n            this.scans = [];\n            this.scan = null;\n            this.session = session;\n            this.updateFiles();\n        },\n\n        //files\n        async updateFiles() {\n            let params = {\n                Bucket: this.getDataset.bucket,\n                Prefix: this.getSession.prefix,\n            }\n            console.log(params)\n            let files = await listObjects(params);\n            let keys = files.Contents.map((item) => item.Key);\n            var filesByExtension = groupByExtension(keys);\n\n            //if dataset contains subfolder, get files in that subfolder\n            //replace filesByExtension[subfolder.extension] with files in subfolder that have that extension\n            if(this.getDataset.subfolders){\n                for(let subfolder of this.getDataset.subfolders ){\n                    let params = {\n                        Bucket: this.getDataset.bucket,\n                        Prefix: this.getSession.prefix + subfolder.path,\n                        Delimiter: \"/\"\n                    }\n                    let subfolderFiles = await listObjects(params);\n                    let subfolderKeys = subfolderFiles.Contents.map((item) => item.Key);\n                    let subfolderFilesByExtension = groupByExtension(subfolderKeys);\n                    filesByExtension[subfolder.extension] = subfolderFilesByExtension[subfolder.extension];\n                }\n            }\n            this.files = filesByExtension;\n            if(this.files[\"nii.gz\"]){\n                this.updateScans(this.files[\"nii.gz\"])\n            }\n            if(this.files[\"trk\"]){\n                this.trks = this.files[\"trk\"];\n            }else{\n                this.trks = [];\n            }\n            if(this.files[\"trx\"]){\n                this.trxs = this.files[\"trx\"];\n            }else{\n                this.trxs = [];\n            }\n            return;\n        },\n        updateScans(niis){\n            if (niis.length > 0) {\n                //match all names to files and return {name,path}\n                let output = niis.reduce((acc, path) => {\n                    this.getDataset.scans.forEach((name) => {\n                        if (path.includes(name)) {\n                            acc.push({ name, path });\n                        }\n                    });\n                    return acc;\n                }, []);\n                this.scans = output;\n                //check for scan with same name as previous scan and use that, otherwise pick first\n                if(this.getScan){\n                    let scanWithName = this.scans.find(scan => scan.name === this.getScan.name);\n                    if(scanWithName){\n                        this.scan = scanWithName;\n                    }else{\n                        this.scan = this.scans[0];\n                    }\n                }else{\n                    if(this.scans.find(scan => scan.name == this.getDataset.scans[0])){\n                        this.scan = this.scans.find(scan => scan.name == this.getDataset.scans[0]);\n                    }else{\n                        this.scan = this.scans[0];\n                    }\n                }\n            } else {\n                this.scans = [];\n                this.scan = null;\n            }\n        },\n        setScan(scan){\n            this.scan = scan;\n        },\n\n    }\n})\n","<template>\n    <div id=\"app\">\n        <div id=\"canvas-container\">\n            <canvas id=\"gl\">Your system doesn't support canvas</canvas>\n        </div>\n        <div class=\"bottom-bar\">\n            <div class=\"tooltip\">\n                <ToolTip :tip=\"tip\">Controls</ToolTip>\n            </div>\n            <div class=\"zoom\">\n                    Zoom: <input type=\"range\" min=\"0.01\" max=\"0.5\" step=\"0.01\" v-model=\"zoom\" @input=\"changeZoom\"/>\n            </div>\n            <div v-if=\"isLoadingTrx\">\n                Loading Trx...\n            </div>\n            <button id=\"download\" @click = \"downloadNifti\" >Download NIFTI file</button>\n            <button id=\"download\" @click = \"downloadTrx\" v-if=\"dataStore.getBundleType == 'trx'\">Download TRX file</button>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\nimport ToolTip from './ToolTip.vue';\nimport {Niivue} from '@niivue/niivue'\nimport {onMounted,watch,ref} from 'vue';\n\nimport { useDataStore } from '../utilites/dataStore.js'\n\nconst dataStore = useDataStore()\n\nvar nv = null\nvar isLoadingVolume = false\nvar volumeToLoad = null\nvar bundleToLoad = null\nvar zoom = 0.1\nconst tip = \"C = Cycle Clip Plane | V = Cycle Slice Type | H,L,J,K = rotation | Scroll = move clip plane | Right Click = rotate clip plain | Left Click = rotate camera\"\n\nfunction init(){\n    nv = null;\n    nv = new Niivue(({show3Dcrosshair: true, backColor: [1, 1, 1, 1]}));\n    nv.attachTo(\"gl\");\n    nv.setSliceType(nv.sliceTypeMultiplanar);\n    nv.setClipPlane([-0.1, 270, 0])\n    nv.setClipPlaneColor([0.5, 0.5, 0.5, 0.5])\n}\n\nfunction downloadTrx(){\n    if(dataStore.getTrxUrl){\n        window.open(dataStore.getTrxUrl)\n    }\n}\n\nfunction downloadNifti(){\n    window.open(dataStore.getScanLink)\n}\n\nonMounted(() => {\n    init();\n});\n\nasync function loadVolume(volumeLink){\n    isLoadingVolume = true;\n    await nv.loadVolumes([{ url: volumeLink, colorMap: \"gray\"}])\n    await nv.updateGLVolume();\n    if(bundleToLoad){\n        let temp = bundleToLoad\n        bundleToLoad = null\n        loadVolume(temp)\n    }\n    isLoadingVolume = false;\n    if(dataStore.getBundleType == \"trk\"){\n            if(newBundlesToLoad && oldBundlesToLoad){\n                updateTrkBundles(newBundlesToLoad,oldBundlesToLoad);\n                newBundlesToLoad = null;\n                oldBundlesToLoad = null;\n            }\n    }\n    return\n}\n\nfunction changeZoom(){\n      nv.scene.volScaleMultiplier = zoom*10;\n      nv.drawScene()\n}\nconst isLoadingTrx = ref(false);\n\nasync function loadTrxFile(url){\n    console.log(\"loading trx\")\n    isLoadingTrx.value = true;\n    if(!nv.initialized) {\n        await nv.init();\n    }\n    if(nv.gl){\n        let meshList = [{url, rgba255: [255, 142, 0, 155]}]\n        await nv.loadMeshes(meshList)\n        isLoadingTrx.value = false;\n        console.log(\"loaded trx\")\n        return\n    }\n    return\n}\n\nfunction updateTrxBundles(){\n    if(trxLoaded == false){\n        return\n    }\n    let cmap = {\n            R: [],\n            G: [],\n            B: [],\n            I: []\n    };\n    let bundles = dataStore.getTrxBundles;\n    for(let i=0;i<bundles.length;i++){\n        if(dataStore.getSelectedBundleNames.includes(bundles[i].name)){\n            cmap.R.push(bundles[i].rgba255[0])\n            cmap.G.push(bundles[i].rgba255[1])\n            cmap.B.push(bundles[i].rgba255[2])\n            cmap.I.push(bundles[i].index)\n        }\n    }\n    nv.setMeshProperty(nv.meshes[0].id, \"fiberGroupColormap\", cmap);\n\n}\n\n\nasync function updateTrkBundles(newBundles,oldBundles){\n    if(newBundles != null && oldBundles != null){\n        const removedBundles = oldBundles.filter(item => !newBundles.includes(item))\n        const addedBundles = newBundles.filter(item => !oldBundles.includes(item))\n\n        if(removedBundles.length > 0){\n            deleteTrkBundles(removedBundles.map(bundle => bundle.url));\n        }\n\n        if(addedBundles.length > 0){\n            for(let i=0;i<addedBundles.length;i++){\n                let bundle = addedBundles[i]\n                await loadTrkBundle(bundle.url,bundle.rgba255)\n            }\n        }\n        for(let i=0; i<nv.meshes.length;i++){\n                    await nv.setMeshProperty(nv.meshes[i].id, \"fiberColor\",\"Fixed\")\n        }\n    }\n}\n\nfunction deleteTrkBundles(urls){\n    for(let i = 0; i < urls.length; i++){\n        nv.removeMeshByUrl(urls[i])\n    }\n}\n\nasync function loadTrkBundle(url,rgba255){\n  if (!nv.initialized) {\n    await nv.init();\n  }\n\n  if (nv.gl) {\n    let meshOptions = {url, rgba255, gl: nv.gl}\n    await nv.addMeshFromUrl(meshOptions);\n    return\n  } else {\n    console.error('WebGL context is not initialized');\n  }\n}\n\nasync function removeAllBundles(){\n    for(let i=0; i<nv.meshes.length;i++){\n        await nv.removeMesh(nv.meshes[i].id)\n    }\n}\nvar trxLoaded = false;\nvar trxLoading = false;\nwatch(() => dataStore.getSelectedBundleNames, async (newValue, oldValue) => {\n    if(newValue != oldValue){\n        if(dataStore.getBundleType == \"trx\"){\n            if(trxLoaded == true){\n                updateTrxBundles();\n            }\n        }\n    }\n});\n\nvar newBundlesToLoad = null;\nvar oldBundlesToLoad = null;\n\nwatch(() => dataStore.getTrks, (newBundles,oldBundles) => {\n    if(newBundles && dataStore.getBundleType == \"trk\"){\n        if(trxLoaded == true){\n            removeAllBundles();\n            trxLoaded = false;\n        }\n        if(!isLoadingVolume){\n            updateTrkBundles(newBundles,oldBundles)\n        }else{\n            newBundlesToLoad = newBundles;\n            oldBundlesToLoad = oldBundles;\n        }\n    }\n});\n\nwatch(() => dataStore.getScanLink, async (newVal) => {\n    if(newVal){\n        if(!isLoadingVolume){\n            await loadVolume(newVal)\n            if(dataStore.getBundleType == \"trx\" && dataStore.getTrxUrl && !trxLoaded && !trxLoading){\n                trxLoading = true;\n                await loadTrxFile(dataStore.getTrxUrl)\n                updateTrxBundles();\n                let cmap = {\n                    R: [],\n                    G: [],\n                    B: [],\n                    I: []\n                }\n                nv.setMeshProperty(nv.meshes[0].id, \"fiberGroupColormap\", cmap)\n                trxLoading = false;\n                trxLoaded = true;\n                dataStore.selectedBundles = dataStore.getBundleNames\n            }\n        }else{\n            volumeToLoad = newVal;\n        }\n    }\n})\n\nwatch(() => dataStore.getSubject, async () => {\n    await removeAllBundles()\n    trxLoaded = false;\n})\n\n</script>\n\n<style scoped>\n#app{\n    display: grid;\n}\n#canvas-container{\n    width: 110vh;\n    height: 93vh;\n}\n#gl{\n    align-self: left;\n    border: black 1px solid;\n}\n.bottom-bar{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n</style>","import script from \"./NiivueRender.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NiivueRender.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NiivueRender.vue?vue&type=style&index=0&id=4577ab35&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4577ab35\"]])\n\nexport default __exports__","<script setup>\nimport { useDataStore } from '../utilites/dataStore.js'\nimport { watch, computed,ref } from 'vue';\nimport { getUrl } from '../utilites/awsHelper.js';\n\nconst dataStore = useDataStore();\nconst selectedPng = ref();\nconst image = computed({\n    get() {\n        let params = {\n            Bucket: dataStore.getDataset.bucket,\n            Key: selectedPng.value,\n        }\n        return getUrl(params);\n    },\n})\nwatch(() => dataStore.getPngs, () => {\n    selectedPng.value = null;\n});\n\n//returns the last part of a string after the last _ but before the file extension\nfunction filterLastWord(path){\n    let lastWord = path.split(\"-\").pop().split(\".\").shift()\n    return lastWord\n}\n</script>\n\n<template>\n    <div class=\"select-container\">\n        <select v-model=\"selectedPng\">\n            <option v-for=\"(png, index) in dataStore.getPngs\" :value=\"png\" :key=\"index\">{{filterLastWord(png)}}</option>\n        </select>\n        <button @click=\"selectedPng = null\">Clear</button>\n    </div>\n    <img class=\"responsive-image\" v-if=\"selectedPng\" :src=\"image\" alt=\"image from dataset\">\n</template>\n\n<style>\n.select-container {\n    display: flex;\n    align-items: center;\n}\n.responsive-image {\n    width: 30vw;\n    height: 30vh; /* viewport height */\n    object-fit: contain; /* resize the image to fit its container while maintaining its aspect ratio */\n}\n</style>","import script from \"./PngViewer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PngViewer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PngViewer.vue?vue&type=style&index=0&id=b2017b40&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div id=\"app\">\n        <NiivueRender/>\n        <div class=\"vertical-menu\">\n            Dataset:\n            <select v-model=\"dataset\">\n                <option v-for=\"(value,key) in dataStore.getDatasets\" :value=\"key\" :key=\"key\">{{ key }}</option>\n            </select>\n            Subject:\n            <SubjectSelect v-model:subject=\"subject\" :subjects=\"dataStore.getSubjects\"></SubjectSelect>\n            <select v-model=\"scan\">\n                <option v-for=\"(item,index) in dataStore.getScans\" :value=\"item\" :key=\"index\">{{ item.name }}</option>\n            </select>\n            <div v-if=\"dataStore.getSession\">session: {{ dataStore.getSession.folderName }}</div>\n            <select v-model=\"session\" v-if=\"dataStore.getSessions.length > 1\">\n                <option v-for=\"(item,index) in sessions\" :value=\"item\" :key=\"index\">{{ item.folderName }}</option>\n            </select>\n            <MultiSelect :items=\"dataStore.getBundleNames\" v-model:selected=\"selectedBundles\"/>\n            <br>\n            Tract Profiles:\n            <PngViewer v-if=\"dataStore.getPngs\"/>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport {onMounted, computed} from 'vue'\nimport SubjectSelect from './components/SubjectSelect.vue'\nimport MultiSelect from './components/MultiSelect.vue'\nimport NiivueRender from './components/NiivueRender.vue'\nimport PngViewer from './components/PngViewer.vue'\nimport { useDataStore } from './utilites/dataStore.js'\n\nconst dataStore = useDataStore();\n\nconst dataset = computed({\n    get() {\n        return dataStore.getDatasetKey;\n    },\n    set(value) {\n        return dataStore.setDataset(value);\n    }\n})\nconst subject = computed({\n    get() {\n        return dataStore.getSubject;\n    },\n    set(value) {\n        return dataStore.setSubject(value);\n    }\n})\nconst scan = computed({\n    get() {\n        return dataStore.getScan;\n    },\n    set(value) {\n        return dataStore.setScan(value);\n    }\n})\n\nconst session = computed({\n    get() {\n        return dataStore.getSession;\n    },\n    set(value) {\n        return dataStore.setSession(value);\n    }\n})\n\nconst selectedBundles = computed({\n    get(){\n        return dataStore.getSelectedBundleNames;\n    },\n    set(value){\n        return dataStore.selectedBundles = value;\n    }\n})\nonMounted(() => {\n    dataStore.setDataset(dataStore.getDatasetKey);\n})\n\n</script>\n\n<style>\n#app{\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n}\n#niivue{\n  height: 80vh;\n  width: 96vw;\n  margin: auto;\n}\n.vertical-menu{\n  display: grid;\n  justify-content: left;\n  align-items: left;\n  align-content: start;\n  width: 100vw;\n  padding: 10px;\n}\n.vertical-menu > * {\n    padding-bottom: 20px;\n}\n\n.vertical-menu > *:last-child {\n    padding-bottom: 0;\n}\n.vertical-menu select {\n  vertical-align: middle;\n  width: 150px;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\nbody {\n    font-family: 'Roboto', sans-serif;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=10557c6d&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport {createPinia} from 'pinia'\n\nconst app = createApp(App)\nconst pinia = createPinia()\n\napp.use(pinia)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktractoscope\"] = self[\"webpackChunktractoscope\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(117); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["emit","props","searchQuery","selected","get","set","value","filteredList","list","filter","item","folderName","toLowerCase","includes","__exports__","incrementSubject","increment","subject","index","subjects","indexOf","length","newValue","selectValue","select","console","log","filteredItems","items","removeItem","updatedSelection","selectedItem","toggleAll","getUrl","params","Bucket","Key","listObjects","Promise","resolve","reject","fetchObjectsV2","then","data","catch","err","async","listCommonPrefixes","limit","allPrefixes","listNextSetOfPrefixes","token","ContinuationToken","CommonPrefixes","concat","IsTruncated","NextContinuationToken","query","Prefix","prefix","Delimiter","delimiter","url","queryString","Object","entries","map","key","encodeURIComponent","join","toFetch","response","fetch","ok","Error","status","text","parser","DOMParser","xmlDoc","parseFromString","output","Contents","Array","from","getElementsByTagName","el","textContent","groupByExtension","filePaths","filesByExtension","path","extensions","split","slice","extension","push","getLastPathComponent","filePath","parts","fileName","pop","getSubfolders","prefixes","getTrkBundles","trkBundles","trkPaths","trkPath","some","bundle","find","filepath","name","rgba255","useDataStore","id","state","datasets","dataset","keys","sessions","session","files","trks","trxs","scans","scan","selectedBundles","loadTrx","getters","getLoadTrx","this","getDataset","getDatasets","getDatasetKey","getSubjects","getSubject","getSessions","getSession","getScans","getScanLink","bucket","getScan","getBundleType","trxFile","trkFiles","getTrxBundles","bundles","getBundleNames","x","trk","getSelectedBundleNames","getTrks","out","getTrxUrl","trx","getPngs","actions","setLoadTrx","val","setDataset","updateSubjects","updateSessions","updateFiles","selectBundle","deselectBundle","participantsSize","setSubject","setSession","subfolders","subfolder","subfolderFiles","subfolderKeys","subfolderFilesByExtension","updateScans","niis","reduce","acc","forEach","scanWithName","setScan","tip","dataStore","nv","isLoadingVolume","bundleToLoad","zoom","init","show3Dcrosshair","backColor","attachTo","setSliceType","sliceTypeMultiplanar","setClipPlane","setClipPlaneColor","downloadTrx","window","open","downloadNifti","loadVolume","volumeLink","loadVolumes","colorMap","updateGLVolume","temp","newBundlesToLoad","oldBundlesToLoad","updateTrkBundles","changeZoom","scene","volScaleMultiplier","drawScene","isLoadingTrx","loadTrxFile","initialized","gl","meshList","loadMeshes","updateTrxBundles","trxLoaded","cmap","R","G","B","I","i","setMeshProperty","meshes","newBundles","oldBundles","removedBundles","addedBundles","deleteTrkBundles","loadTrkBundle","urls","removeMeshByUrl","meshOptions","addMeshFromUrl","error","removeAllBundles","removeMesh","trxLoading","oldValue","newVal","selectedPng","image","filterLastWord","lastWord","shift","app","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}